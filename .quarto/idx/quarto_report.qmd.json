{"title":"Diphtheria: AFRO Slideck Update, 2025","markdown":{"yaml":{"title":"Diphtheria: AFRO Slideck Update, 2025","author":"muiangaj@who.int","format":{"html":{"toc":true,"theme":"flatly","code-fold":true,"code-summary":"Show code","code-tools":false,"code-block-bg":true,"css":"styles.css","page-layout":"full"}},"editor":"visual","execute":{"echo":false,"warning":false,"message":false}},"headingText":"Load","containsRefs":false,"markdown":"\n\n```{r}\n#| label: setup\n#| include: false\nlibrary(pacman)\npacman::p_load(\n  lubridate, rio, here, scales, janitor, skimr, aweek, incidence2,\n  stringr, forcats, purrr, gtExtras, gt, RColorBrewer, plotly,\n  i2extras, tidyverse, glue\n)\n\n```\n\n```{r}\nlinelist <- import(here(\"data/diphtheria_linelist_AFRO.xlsx\"))\n\n# Clean + make ISO Monday 'epiweek' dates\nlinelist_clean <- linelist %>%\n  clean_names() %>%\n  distinct() %>%\n  mutate(\n    epiweek = ymd(paste0(year, \"-01-01\")) + weeks(week_number - 1) -\n              days(wday(ymd(paste0(year, \"-01-04\")), week_start = 1) - 1),\n    population      = as.numeric(population),\n    suspected_cases = as.numeric(suspected_cases),\n    deaths          = as.numeric(deaths)\n  ) %>%\n  select(country, province_name, district_name, population,\n         suspected_cases, deaths, epiweek)\n\n# Aggregate to country-week; keep BOTH cases and deaths\ncountry_summary <- linelist_clean %>%\n  filter(epiweek > as.Date(\"2024-12-28\")) %>%\n  group_by(country, epiweek) %>%\n  summarise(\n    suspected_cases = sum(suspected_cases, na.rm = TRUE),\n    deaths          = sum(deaths,           na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n    mutate(epiweek = floor_date(epiweek, \"week\", week_start = 1))\n\n\n\n```\n\n```{r}\n# Generate weekly Monday breaks\nweekly_breaks <- seq.Date(\n  from = floor_date(min(country_summary$epiweek, na.rm = TRUE), \"week\", week_start = 1),\n  to   = ceiling_date(max(country_summary$epiweek, na.rm = TRUE), \"week\", week_start = 1),\n  by   = \"week\"\n)\n\n# Custom label function: show day always, month only on first week of each month\nmonth_labels <- function(x) {\n  days   <- format(x, \"%d\")\n  months <- format(x, \"%b\")\n\n  # Identify which dates are the first Monday of a new month\n  is_new_month <- c(TRUE, months[-1] != months[-length(months)])\n\n  # Print month only when new month starts\n  out <- ifelse(is_new_month, paste0(days, \"\\n\", months), days)\n  return(out)\n}\n\n```\n\n# Regional Diphtheria Cases by Week\n\n1 January 2025 to 3 October 2025\n\n```{r}\n# (optional) fixed palette (will recycle if > 8 countries)\n# Define manual colors\ncountry_colors <- c(\n  \"Mali\"  = \"#4FB7B3\",   # red tone\n  \"Niger\" = \"#065084\",   # blue tone\n  \"Other\" = \"#BAB0AC\"    # neutral grey\n\n  )\n\ncountry_summary <- country_summary %>%\n  mutate(\n    color_group = case_when(\n      country == \"Mali\"  ~ \"Mali\",\n      country == \"Niger\" ~ \"Niger\",\n      TRUE               ~ \"Other\"\n    )\n  )\n\n\np_global <- ggplot(\n  country_summary,\n  aes(\n    x = epiweek,\n    y = suspected_cases,\n    fill = country,\n    text = paste0(\n      \"<b>Week:</b> \", epiweek, \"<br>\",\n      \"<b>Country:</b> \", country, \"<br>\",\n      \"<b>Cases:</b> \", scales::comma(suspected_cases)\n    )\n  )\n) +\n  geom_col(width = 6.9, position = \"stack\", color = NA) +\n  scale_x_date(\n    breaks = weekly_breaks,\n    labels = month_labels,    # use custom function\n    expand = c(0, 0)\n  ) +  \n  scale_y_continuous(labels = scales::comma, expand = c(0,0)) +\n  scale_fill_manual(    values = country_colors, name = NULL) +\n  labs(title = NULL,\n       x = NULL, y = \"Cases\", fill = NULL) +\n  theme_minimal(base_size = 12) +\n  theme(legend.position = \"right\", \n        axis.text.x = element_text(size = 9),\n        panel.grid.minor = element_blank())\n\nggplotly(p_global, tooltip = \"text\") %>%\n  layout(legend = list(orientation = \"h\", x = 0, y = -0.2),\n         xaxis  = list(tickformat = \"%b %d\\n%Y\"))\n\n\n```\n\n*Please interpret the data presented here with caution due to reporting delays in several countries, especially fro the most recent weeks. Figures may also vary based on data availability*\n\n<br>\n\n# Weekly Diphtheria cases by Countries\n\n```{r}\nbuild_country_plot <- function(cty) {\n  dat <- country_summary %>% filter(country == cty)\n\n  # choose bar color (fallback to \"Other\")\n  bar_col <- if (cty %in% names(country_colors)) unname(country_colors[cty]) else unname(country_colors[\"Other\"])\n\n  plot_ly(\n    data = dat,\n    x = ~epiweek,\n    y = ~suspected_cases,\n    type = \"bar\",\n    name = cty,\n    marker = list(color = bar_col, line = list(width = 0)),\n    hovertemplate = paste(\n      \"<b>Country:</b> \", cty, \"<br>\",\n      \"<b>Week starting:</b> %{x|%Y-%m-%d}<br>\",\n      \"<b>Cases:</b> %{y:,}<extra></extra>\"\n    )\n  ) %>%\n    layout(\n      # remove default title\n      title = list(text = NULL),\n      xaxis = list(tickformat = \"%d\\n %b\", title = \"\"),\n      yaxis = list(title = \"\", rangemode = \"tozero\"),\n      # custom annotation for title at the top\n      annotations = list(\n        list(\n          text = paste0(\"<b>\", cty, \"</b>\"),\n          x = 0.5,  # center\n          y = 1.1,  # above plot area\n          xref = \"paper\",\n          yref = \"paper\",\n          xanchor = \"center\",\n          yanchor = \"bottom\",\n          showarrow = FALSE,\n          font = list(size = 12, color = \"#222\")\n        )\n      )\n    )\n}\n\nplots <- lapply(\n  c(\"Mali\", \"Niger\", setdiff(sort(unique(country_summary$country)), c(\"Mali\", \"Niger\"))),\n  build_country_plot\n)\n\np_facets <- subplot(\n  plots,\n  nrows = ceiling(length(plots) / 2),\n  shareX = FALSE, shareY = FALSE,\n  margin = 0.04, which_layout = \"grid\"\n) %>%\n  layout(showlegend = FALSE)\n\np_facets\n\n\n```\n\n*Spikes in case counts due to batch reporting and retrospective adjustments*\n\n<br><br>\n\n# Summary Outbreak Indicators, 2025\n\n-   In 2025, as of 03 October, the African Region has reported 1,940 cases and 128 deaths across 2 countries.\n-   In the last 28 days, 256 new cases were reported, reflecting a decrease of about 55% compared to the previous 28-day period.\n-   In the last month, Mali (40), Niger (216) accounted for 70% of the regional cases.\n-   The region CFR for this period is 5.5%, with Niger exceeding the emergency threshold of 1%\n\n```{r}\nregion_name <- \"AFRO\"\n\nlast_end   <- max(country_summary$epiweek, na.rm = TRUE)\nlast_start <- last_end - lubridate::days(27)\nprev_start <- last_start - lubridate::days(28)\nprev_end   <- last_start - lubridate::days(1)\nthis_year  <- lubridate::year(last_end)\n\n# Weekly series for sparklines (cases only)\ndf_weekly <- country_summary %>%\n  mutate(week = floor_date(epiweek, \"week\", week_start = 1)) %>%\n  filter(lubridate::year(week) == this_year) %>%\n  group_by(country, week) %>%\n  summarise(weekly_cases = sum(suspected_cases, na.rm = TRUE), .groups = \"drop\")\n\nwk_series <- df_weekly %>%\n  arrange(country, week) %>%\n  group_by(country) %>%\n  summarise(wk_cases = list(as.numeric(weekly_cases)), .groups = \"drop\")\n\n# Country metrics (YTD + 28d windows)\nby_country <- country_summary %>%\n  filter(lubridate::year(epiweek) == this_year) %>%\n  group_by(country) %>%\n  summarise(\n    total_cases_yr   = sum(suspected_cases, na.rm = TRUE),\n    total_deaths_yr  = sum(deaths,          na.rm = TRUE),\n    cases_28d        = sum(suspected_cases[epiweek >= last_start & epiweek <= last_end],  na.rm = TRUE),\n    deaths_28d       = sum(deaths[epiweek >= last_start & epiweek <= last_end],          na.rm = TRUE),\n    cases_prev_28d   = sum(suspected_cases[epiweek >= prev_start & epiweek <= prev_end], na.rm = TRUE),\n    deaths_prev_28d  = sum(deaths[epiweek >= prev_start & epiweek <= prev_end],          na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  mutate(\n    cfr_28d = if_else(cases_28d > 0, 100 * deaths_28d / cases_28d, 0),\n    monthly_cases_chg  = if_else(cases_prev_28d  > 0, 100 * (cases_28d  - cases_prev_28d)  / cases_prev_28d,  NA_real_),\n    monthly_deaths_chg = if_else(deaths_prev_28d > 0, 100 * (deaths_28d - deaths_prev_28d) / deaths_prev_28d, NA_real_)\n  ) %>%\n  left_join(wk_series, by = \"country\")\n\ntotals_row <- by_country %>%\n  summarise(\n    country           = \"Total\",\n    total_cases_yr    = sum(total_cases_yr,  na.rm = TRUE),\n    total_deaths_yr   = sum(total_deaths_yr, na.rm = TRUE),\n    cases_28d         = sum(cases_28d,       na.rm = TRUE),\n    deaths_28d        = sum(deaths_28d,      na.rm = TRUE),\n    cases_prev_28d    = sum(cases_prev_28d,  na.rm = TRUE),\n    deaths_prev_28d   = sum(deaths_prev_28d, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  mutate(\n    cfr_28d = if_else(cases_28d > 0, 100 * deaths_28d / cases_28d, 0),\n    monthly_cases_chg  = if_else(cases_prev_28d  > 0, 100 * (cases_28d  - cases_prev_28d)  / cases_prev_28d,  NA_real_),\n    monthly_deaths_chg = if_else(deaths_prev_28d > 0, 100 * (deaths_28d - deaths_prev_28d) / deaths_prev_28d, NA_real_),\n    wk_cases = list(NA_real_)\n  )\n\ntbl_data <- bind_rows(by_country, totals_row) %>%\n  select(-cases_prev_28d, -deaths_prev_28d)\n\ntitle_txt    <- sprintf(\"Summary of Outbreak Indicators for %d: %s\", this_year, region_name)\nsubtitle_txt <- \"Last 28 days\"\nsource_txt   <- \"Data Source: World Health Organization African Region / DPC\"\n\ntbl <- tbl_data %>%\n  gt(rowname_col = \"country\") %>%\n  tab_header(title = md(glue(\"**{title_txt}**\")), subtitle = md(subtitle_txt)) %>%\n  cols_label(\n    total_cases_yr   = md(\"Total Cases<br/>(2025)\"),\n    total_deaths_yr  = md(\"Total Deaths<br/>(2025)\"),\n    cases_28d        = md(\"Cases<br/>(Last 28d)\"),\n    deaths_28d       = md(\"Deaths<br/>(Last 28d)\"),\n    wk_cases         = md(\"Weekly Cases<br/>(2025)\"),\n    cfr_28d          = md(\"CFR<br/>(28d, %)\"),\n    monthly_cases_chg  = md(\"Monthly Cases<br/>Change (%)\"),\n    monthly_deaths_chg = md(\"Monthly Deaths<br/>Change (%)\")\n  ) %>%\n  gtExtras::gt_plt_sparkline(wk_cases, same_limit = TRUE, type = \"default\") %>%\n  fmt_integer(columns = c(total_cases_yr, total_deaths_yr, cases_28d, deaths_28d)) %>%\n  fmt_number(columns = c(cfr_28d, monthly_cases_chg, monthly_deaths_chg), decimals = 1) %>%\n  tab_style(\n    style = list(cell_fill(color = \"#E8F1FF\")),\n    locations = cells_body(columns = c(monthly_cases_chg, monthly_deaths_chg))\n  ) %>%\n  tab_style(\n    style = list(cell_fill(color = \"#FDEDE6\")),\n    locations = cells_body(columns = wk_cases)\n  ) %>%\n  tab_style(\n    style = list(cell_text(weight = \"bold\")),\n    locations = list(\n      cells_body(rows = country == \"Total\"),\n      cells_stub(rows = country == \"Total\")\n    )\n  ) %>%\n  tab_source_note(source_txt) %>%\n  tab_options(\n    table.font.size = px(11),\n    data_row.padding = px(8),\n    source_notes.font.size = px(11),\n    column_labels.font.weight = \"bold\"\n  )\n\ntbl\n\n```\n\n*Please interpret the data presented here with caution due the reporting delays in several countries, especially for the most recent weeks. Figures may also vary based on data availability* <br><br>\n\n# Mortality by Country\n\n```{r}\n# Compute Case Fatality Rate (CFR%) \ndf_summary <- linelist_clean %>% \n  group_by(country) %>% \n  summarise(cases = sum(suspected_cases, na.rm = T), deaths = sum(deaths, na.rm = T)) %>% \n  mutate( CFR = 100 * deaths / cases ) \n\n# Optional: define color palette by WHO Region \npal <- c(\"AFRO\" = \"#F4A582\", \"EMRO\" = \"#92C5DE\") \n\n# Plot \nggplot(df_summary, aes(x = CFR, y = deaths, size = cases, fill = country)) + \n  geom_point(alpha = 0.6, shape = 21, color = \"white\") + \n  geom_vline(xintercept = 1, linetype = \"dotted\", color = \"red\") + \n  geom_text( aes(label = country), hjust = 0.5, vjust = -1, size = 3.2 ) + \n  #scale_fill_manual(values = pal) + \n  scale_size_continuous( range = c(3, 18), labels = comma, name = \"Total Cases\" ) + \n  scale_x_continuous(labels = label_number(suffix = \"%\", accuracy = 0.1)) + \n  scale_y_continuous(labels = comma) + \n  labs( title = \"Case Fatality Rate vs Deaths by Country\", x = \"Case Fatality Rate (CFR %)\", y = \"Number of Deaths\", fill = \"WHO Region\" ) + \n  theme_minimal(base_size = 12) + \n  theme( legend.position = \"right\", \n         panel.grid.minor = element_blank(), \n         plot.title = element_text(face = \"bold\") )\n\n```\n\n*As many countries report only total deaths, CFR is calculated using all reported deaths, GTFCC recommends calculating CFR from facility deaths only, with community deaths reported separately. Please note that this plot only includes countries reporting at least 100 cases in the last eight weeks.*\n","srcMarkdownNoYaml":"\n\n```{r}\n#| label: setup\n#| include: false\nlibrary(pacman)\npacman::p_load(\n  lubridate, rio, here, scales, janitor, skimr, aweek, incidence2,\n  stringr, forcats, purrr, gtExtras, gt, RColorBrewer, plotly,\n  i2extras, tidyverse, glue\n)\n\n```\n\n```{r}\n# Load\nlinelist <- import(here(\"data/diphtheria_linelist_AFRO.xlsx\"))\n\n# Clean + make ISO Monday 'epiweek' dates\nlinelist_clean <- linelist %>%\n  clean_names() %>%\n  distinct() %>%\n  mutate(\n    epiweek = ymd(paste0(year, \"-01-01\")) + weeks(week_number - 1) -\n              days(wday(ymd(paste0(year, \"-01-04\")), week_start = 1) - 1),\n    population      = as.numeric(population),\n    suspected_cases = as.numeric(suspected_cases),\n    deaths          = as.numeric(deaths)\n  ) %>%\n  select(country, province_name, district_name, population,\n         suspected_cases, deaths, epiweek)\n\n# Aggregate to country-week; keep BOTH cases and deaths\ncountry_summary <- linelist_clean %>%\n  filter(epiweek > as.Date(\"2024-12-28\")) %>%\n  group_by(country, epiweek) %>%\n  summarise(\n    suspected_cases = sum(suspected_cases, na.rm = TRUE),\n    deaths          = sum(deaths,           na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n    mutate(epiweek = floor_date(epiweek, \"week\", week_start = 1))\n\n\n\n```\n\n```{r}\n# Generate weekly Monday breaks\nweekly_breaks <- seq.Date(\n  from = floor_date(min(country_summary$epiweek, na.rm = TRUE), \"week\", week_start = 1),\n  to   = ceiling_date(max(country_summary$epiweek, na.rm = TRUE), \"week\", week_start = 1),\n  by   = \"week\"\n)\n\n# Custom label function: show day always, month only on first week of each month\nmonth_labels <- function(x) {\n  days   <- format(x, \"%d\")\n  months <- format(x, \"%b\")\n\n  # Identify which dates are the first Monday of a new month\n  is_new_month <- c(TRUE, months[-1] != months[-length(months)])\n\n  # Print month only when new month starts\n  out <- ifelse(is_new_month, paste0(days, \"\\n\", months), days)\n  return(out)\n}\n\n```\n\n# Regional Diphtheria Cases by Week\n\n1 January 2025 to 3 October 2025\n\n```{r}\n# (optional) fixed palette (will recycle if > 8 countries)\n# Define manual colors\ncountry_colors <- c(\n  \"Mali\"  = \"#4FB7B3\",   # red tone\n  \"Niger\" = \"#065084\",   # blue tone\n  \"Other\" = \"#BAB0AC\"    # neutral grey\n\n  )\n\ncountry_summary <- country_summary %>%\n  mutate(\n    color_group = case_when(\n      country == \"Mali\"  ~ \"Mali\",\n      country == \"Niger\" ~ \"Niger\",\n      TRUE               ~ \"Other\"\n    )\n  )\n\n\np_global <- ggplot(\n  country_summary,\n  aes(\n    x = epiweek,\n    y = suspected_cases,\n    fill = country,\n    text = paste0(\n      \"<b>Week:</b> \", epiweek, \"<br>\",\n      \"<b>Country:</b> \", country, \"<br>\",\n      \"<b>Cases:</b> \", scales::comma(suspected_cases)\n    )\n  )\n) +\n  geom_col(width = 6.9, position = \"stack\", color = NA) +\n  scale_x_date(\n    breaks = weekly_breaks,\n    labels = month_labels,    # use custom function\n    expand = c(0, 0)\n  ) +  \n  scale_y_continuous(labels = scales::comma, expand = c(0,0)) +\n  scale_fill_manual(    values = country_colors, name = NULL) +\n  labs(title = NULL,\n       x = NULL, y = \"Cases\", fill = NULL) +\n  theme_minimal(base_size = 12) +\n  theme(legend.position = \"right\", \n        axis.text.x = element_text(size = 9),\n        panel.grid.minor = element_blank())\n\nggplotly(p_global, tooltip = \"text\") %>%\n  layout(legend = list(orientation = \"h\", x = 0, y = -0.2),\n         xaxis  = list(tickformat = \"%b %d\\n%Y\"))\n\n\n```\n\n*Please interpret the data presented here with caution due to reporting delays in several countries, especially fro the most recent weeks. Figures may also vary based on data availability*\n\n<br>\n\n# Weekly Diphtheria cases by Countries\n\n```{r}\nbuild_country_plot <- function(cty) {\n  dat <- country_summary %>% filter(country == cty)\n\n  # choose bar color (fallback to \"Other\")\n  bar_col <- if (cty %in% names(country_colors)) unname(country_colors[cty]) else unname(country_colors[\"Other\"])\n\n  plot_ly(\n    data = dat,\n    x = ~epiweek,\n    y = ~suspected_cases,\n    type = \"bar\",\n    name = cty,\n    marker = list(color = bar_col, line = list(width = 0)),\n    hovertemplate = paste(\n      \"<b>Country:</b> \", cty, \"<br>\",\n      \"<b>Week starting:</b> %{x|%Y-%m-%d}<br>\",\n      \"<b>Cases:</b> %{y:,}<extra></extra>\"\n    )\n  ) %>%\n    layout(\n      # remove default title\n      title = list(text = NULL),\n      xaxis = list(tickformat = \"%d\\n %b\", title = \"\"),\n      yaxis = list(title = \"\", rangemode = \"tozero\"),\n      # custom annotation for title at the top\n      annotations = list(\n        list(\n          text = paste0(\"<b>\", cty, \"</b>\"),\n          x = 0.5,  # center\n          y = 1.1,  # above plot area\n          xref = \"paper\",\n          yref = \"paper\",\n          xanchor = \"center\",\n          yanchor = \"bottom\",\n          showarrow = FALSE,\n          font = list(size = 12, color = \"#222\")\n        )\n      )\n    )\n}\n\nplots <- lapply(\n  c(\"Mali\", \"Niger\", setdiff(sort(unique(country_summary$country)), c(\"Mali\", \"Niger\"))),\n  build_country_plot\n)\n\np_facets <- subplot(\n  plots,\n  nrows = ceiling(length(plots) / 2),\n  shareX = FALSE, shareY = FALSE,\n  margin = 0.04, which_layout = \"grid\"\n) %>%\n  layout(showlegend = FALSE)\n\np_facets\n\n\n```\n\n*Spikes in case counts due to batch reporting and retrospective adjustments*\n\n<br><br>\n\n# Summary Outbreak Indicators, 2025\n\n-   In 2025, as of 03 October, the African Region has reported 1,940 cases and 128 deaths across 2 countries.\n-   In the last 28 days, 256 new cases were reported, reflecting a decrease of about 55% compared to the previous 28-day period.\n-   In the last month, Mali (40), Niger (216) accounted for 70% of the regional cases.\n-   The region CFR for this period is 5.5%, with Niger exceeding the emergency threshold of 1%\n\n```{r}\nregion_name <- \"AFRO\"\n\nlast_end   <- max(country_summary$epiweek, na.rm = TRUE)\nlast_start <- last_end - lubridate::days(27)\nprev_start <- last_start - lubridate::days(28)\nprev_end   <- last_start - lubridate::days(1)\nthis_year  <- lubridate::year(last_end)\n\n# Weekly series for sparklines (cases only)\ndf_weekly <- country_summary %>%\n  mutate(week = floor_date(epiweek, \"week\", week_start = 1)) %>%\n  filter(lubridate::year(week) == this_year) %>%\n  group_by(country, week) %>%\n  summarise(weekly_cases = sum(suspected_cases, na.rm = TRUE), .groups = \"drop\")\n\nwk_series <- df_weekly %>%\n  arrange(country, week) %>%\n  group_by(country) %>%\n  summarise(wk_cases = list(as.numeric(weekly_cases)), .groups = \"drop\")\n\n# Country metrics (YTD + 28d windows)\nby_country <- country_summary %>%\n  filter(lubridate::year(epiweek) == this_year) %>%\n  group_by(country) %>%\n  summarise(\n    total_cases_yr   = sum(suspected_cases, na.rm = TRUE),\n    total_deaths_yr  = sum(deaths,          na.rm = TRUE),\n    cases_28d        = sum(suspected_cases[epiweek >= last_start & epiweek <= last_end],  na.rm = TRUE),\n    deaths_28d       = sum(deaths[epiweek >= last_start & epiweek <= last_end],          na.rm = TRUE),\n    cases_prev_28d   = sum(suspected_cases[epiweek >= prev_start & epiweek <= prev_end], na.rm = TRUE),\n    deaths_prev_28d  = sum(deaths[epiweek >= prev_start & epiweek <= prev_end],          na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  mutate(\n    cfr_28d = if_else(cases_28d > 0, 100 * deaths_28d / cases_28d, 0),\n    monthly_cases_chg  = if_else(cases_prev_28d  > 0, 100 * (cases_28d  - cases_prev_28d)  / cases_prev_28d,  NA_real_),\n    monthly_deaths_chg = if_else(deaths_prev_28d > 0, 100 * (deaths_28d - deaths_prev_28d) / deaths_prev_28d, NA_real_)\n  ) %>%\n  left_join(wk_series, by = \"country\")\n\ntotals_row <- by_country %>%\n  summarise(\n    country           = \"Total\",\n    total_cases_yr    = sum(total_cases_yr,  na.rm = TRUE),\n    total_deaths_yr   = sum(total_deaths_yr, na.rm = TRUE),\n    cases_28d         = sum(cases_28d,       na.rm = TRUE),\n    deaths_28d        = sum(deaths_28d,      na.rm = TRUE),\n    cases_prev_28d    = sum(cases_prev_28d,  na.rm = TRUE),\n    deaths_prev_28d   = sum(deaths_prev_28d, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  mutate(\n    cfr_28d = if_else(cases_28d > 0, 100 * deaths_28d / cases_28d, 0),\n    monthly_cases_chg  = if_else(cases_prev_28d  > 0, 100 * (cases_28d  - cases_prev_28d)  / cases_prev_28d,  NA_real_),\n    monthly_deaths_chg = if_else(deaths_prev_28d > 0, 100 * (deaths_28d - deaths_prev_28d) / deaths_prev_28d, NA_real_),\n    wk_cases = list(NA_real_)\n  )\n\ntbl_data <- bind_rows(by_country, totals_row) %>%\n  select(-cases_prev_28d, -deaths_prev_28d)\n\ntitle_txt    <- sprintf(\"Summary of Outbreak Indicators for %d: %s\", this_year, region_name)\nsubtitle_txt <- \"Last 28 days\"\nsource_txt   <- \"Data Source: World Health Organization African Region / DPC\"\n\ntbl <- tbl_data %>%\n  gt(rowname_col = \"country\") %>%\n  tab_header(title = md(glue(\"**{title_txt}**\")), subtitle = md(subtitle_txt)) %>%\n  cols_label(\n    total_cases_yr   = md(\"Total Cases<br/>(2025)\"),\n    total_deaths_yr  = md(\"Total Deaths<br/>(2025)\"),\n    cases_28d        = md(\"Cases<br/>(Last 28d)\"),\n    deaths_28d       = md(\"Deaths<br/>(Last 28d)\"),\n    wk_cases         = md(\"Weekly Cases<br/>(2025)\"),\n    cfr_28d          = md(\"CFR<br/>(28d, %)\"),\n    monthly_cases_chg  = md(\"Monthly Cases<br/>Change (%)\"),\n    monthly_deaths_chg = md(\"Monthly Deaths<br/>Change (%)\")\n  ) %>%\n  gtExtras::gt_plt_sparkline(wk_cases, same_limit = TRUE, type = \"default\") %>%\n  fmt_integer(columns = c(total_cases_yr, total_deaths_yr, cases_28d, deaths_28d)) %>%\n  fmt_number(columns = c(cfr_28d, monthly_cases_chg, monthly_deaths_chg), decimals = 1) %>%\n  tab_style(\n    style = list(cell_fill(color = \"#E8F1FF\")),\n    locations = cells_body(columns = c(monthly_cases_chg, monthly_deaths_chg))\n  ) %>%\n  tab_style(\n    style = list(cell_fill(color = \"#FDEDE6\")),\n    locations = cells_body(columns = wk_cases)\n  ) %>%\n  tab_style(\n    style = list(cell_text(weight = \"bold\")),\n    locations = list(\n      cells_body(rows = country == \"Total\"),\n      cells_stub(rows = country == \"Total\")\n    )\n  ) %>%\n  tab_source_note(source_txt) %>%\n  tab_options(\n    table.font.size = px(11),\n    data_row.padding = px(8),\n    source_notes.font.size = px(11),\n    column_labels.font.weight = \"bold\"\n  )\n\ntbl\n\n```\n\n*Please interpret the data presented here with caution due the reporting delays in several countries, especially for the most recent weeks. Figures may also vary based on data availability* <br><br>\n\n# Mortality by Country\n\n```{r}\n# Compute Case Fatality Rate (CFR%) \ndf_summary <- linelist_clean %>% \n  group_by(country) %>% \n  summarise(cases = sum(suspected_cases, na.rm = T), deaths = sum(deaths, na.rm = T)) %>% \n  mutate( CFR = 100 * deaths / cases ) \n\n# Optional: define color palette by WHO Region \npal <- c(\"AFRO\" = \"#F4A582\", \"EMRO\" = \"#92C5DE\") \n\n# Plot \nggplot(df_summary, aes(x = CFR, y = deaths, size = cases, fill = country)) + \n  geom_point(alpha = 0.6, shape = 21, color = \"white\") + \n  geom_vline(xintercept = 1, linetype = \"dotted\", color = \"red\") + \n  geom_text( aes(label = country), hjust = 0.5, vjust = -1, size = 3.2 ) + \n  #scale_fill_manual(values = pal) + \n  scale_size_continuous( range = c(3, 18), labels = comma, name = \"Total Cases\" ) + \n  scale_x_continuous(labels = label_number(suffix = \"%\", accuracy = 0.1)) + \n  scale_y_continuous(labels = comma) + \n  labs( title = \"Case Fatality Rate vs Deaths by Country\", x = \"Case Fatality Rate (CFR %)\", y = \"Number of Deaths\", fill = \"WHO Region\" ) + \n  theme_minimal(base_size = 12) + \n  theme( legend.position = \"right\", \n         panel.grid.minor = element_blank(), \n         plot.title = element_text(face = \"bold\") )\n\n```\n\n*As many countries report only total deaths, CFR is calculated using all reported deaths, GTFCC recommends calculating CFR from facility deaths only, with community deaths reported separately. Please note that this plot only includes countries reporting at least 100 cases in the last eight weeks.*\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"css":["styles.css"],"output-file":"quarto_report.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","editor":"visual","title":"Diphtheria: AFRO Slideck Update, 2025","author":"muiangaj@who.int","theme":"flatly","code-summary":"Show code","code-block-bg":true,"page-layout":"full"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}